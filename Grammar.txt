S -> ENTER S
S -> S ENTER
S -> ENTER
S -> SS
SS -> SENTENCE
SS -> SS SS
ENTER -> NEWLINE
ENTER -> ENTER NEWLINE
SENTENCE -> IF_STATE
SENTENCE -> WHILE_STATE
SENTENCE -> FOR_STATE
SENTENCE -> SWITCH_STATE
SENTENCE -> TRY_STATE
SENTENCE -> FUNCTION_STATE
SENTENCE -> THROW_STATE
SENTENCE -> DELETE_STATE
SENTENCE -> THROW_STATE
SENTENCE -> ENTER SENTENCE
SENTENCE -> SENTENCE ENTER
SENTENCE -> SENTENCE SENTENCE
SENTENCE -> ASSIGN_VAR
SENTENCE -> ASSIGN_CONST
SENTENCE -> ASSIGN_LET
SENTENCE -> RET_SENTENCE
SENTENCE -> DICT_ASSIGN
SENTENCE -> ASSIGN_LIST
OPP_LGC -> IS_EQUAL
OPP_LGC -> NOT_EQUAL
OPP_LGC -> GREATER_EQUAL
OPP_LGC -> LESS_EQUAL
OPP_LGC -> GREATER
OPP_LGC -> LESS
OPP_LGC -> AND
OPP_LGC -> OR
OPP_LGC -> NOT
OPP_ART -> MODULO
OPP_ART -> PLUS
OPP_ART -> MINUS
OPP_ART -> MULTIPLY
OPP_ART -> DIVIDE
OPP_ART -> POWER
TYPE -> INTEGER
TYPE -> STRING
TYPE -> BOOLEAN
TYPE -> FLOAT
TYPE -> DOUBLE
TYPE -> CHAR
TYPE -> LONG
TYPE -> LIST
TYPE -> DICTIONARY
TYPE -> TUPLE
TYPE -> SET
TYPE -> STRUCT
TYPE -> NULL
ASSIGNER -> VAR
ASSIGNER -> LET
PARAM -> ENTER
PARAM -> PARAM ENTER
PARAM -> TYPE
PARAM -> PARAM TYPE
PARAM -> PARAM COMMA PARAM
NUMBER -> NUMBER
LIST -> OPEN_SQUARE_BRACKET CLOSE_SQUARE_BRACKET
LIST -> OPEN_SQUARE_BRACKET PARAM CLOSE_SQUARE_BRACKET
LIST -> OPEN_SQUARE_BRACKET FOR_STATE CLOSE_SQUARE_BRACKET
ASSIGN_LIST -> ASSIGNER LIST SEMICOLON
BOOLEAN -> TRUE
BOOLEAN -> FALSE
AFTER_SENTENCE -> SS AFTER_SENTENCE
AFTER_SENTENCE -> ENTER AFTER_SENTENCE
AFTER_SENTENCE -> VARIABLE EQUAL TYPE SEMICOLON
AFTER_SENTENCE -> VARIABLE EQUAL TYPE SEMICOLON ENTER
AFTER_SENTENCE -> VARIABLE EQUAL AFTER_SENTENCE
AFTER_SENTENCE -> VARIABLE OPP_ART VARIABLE SEMICOLON ENTER
ASSIGNMENT -> VARIABLE EQUAL TYPE SEMICOLON
ASSIGNMENT -> VARIABLE SEMICOLON S ASSIGNMENT
ASSIGNMENT -> VARIABLE EQUAL TYPE SEMICOLON ENTER
ASSIGNMENT -> VARIABLE SEMICOLON ENTER
ASSIGNMENT -> VARIABLE SEMICOLON ASSIGNMENT
ASSIGN_VAR -> VAR ASSIGNMENT
ASSIGN_LET -> LET ASSIGNMENT
ASSIGNMENT -> VARIABLE EQUAL VARIABLE EXPRESI_OPP SEMICOLON
ASSIGNMENT -> VARIABLE EQUAL ANGKA EXPRESI_OPP SEMICOLON
ASSIGNMENT -> VARIABLE EQUAL VARIABLE EXPRESI_OPP SEMICOLON
ASSIGNMENT -> VARIABLE EQUAL ANGKA EXPRESI_OPP SEMICOLON
ASSIGNMENT -> VARIABLE EQUAL VARIABLE EXPRESI_OPP SEMICOLON ENTER
ASSIGNMENT -> VARIABLE EQUAL ANGKA EXPRESI_OPP SEMICOLON ENTER
ASSIGNMENT -> VARIABLE EQUAL VARIABLE EXPRESI_OPP SEMICOLON ENTER
ASSIGNMENT -> VARIABLE EQUAL ANGKA EXPRESI_OPP SEMICOLON ENTER
ASSIGN_CONST -> CONST VARIABLE EQUAL TYPE SEMICOLON
ASSIGN_CONST -> CONST VARIABLE EQUAL TYPE SEMICOLON ENTER
ASSIGN_CONST -> CONST VARIABLE EQUAL TYPE SEMICOLON AFTER_SENTENCE
BOOL_VAR -> VAR EQUAL BOOLEAN
EXPRESI -> BOOLEAN
EXPRESI -> BOOL_VAR
EXPRESI -> BOOLFUNCTION
EXPRESI -> VARIABLE OPP_LGC VARIABLE
EXPRESI -> TYPE OPP_LGC TYPE
EXPRESI -> TYPE OPP_LGC TYPE
EXPRESI -> TYPE OPP_LGC VARIABLE
EXPRESI -> VARIABLE OPP_LGC TYPE
EXPRESI -> VARIABLE EXPRESI_OPP OPP_LGC VARIABLE EXPRESI_OPP
EXPRESI -> ANGKA EXPRESI_OPP OPP_LGC ANGKA EXPRESI_OPP
EXPRESI -> ANGKA OPP_LGC ANGKA EXPRESI_OPP
EXPRESI -> VARIABLE OPP_LGC VARIABLE EXPRESI_OPP
EXPRESI -> ANGKA EXPRESI_OPP OPP_LGC ANGKA
EXPRESI -> VARIABLE EXPRESI_OPP OPP_LGC VARIABLE
EXPRESI -> VARIABLE EXPRESI_OPP OPP_LGC ANGKA EXPRESI_OPP
EXPRESI -> ANGKA EXPRESI_OPP OPP_LGC VARIABLE EXPRESI_OPP
EXPRESI -> VARIABLE OPP_LGC ANGKA EXPRESI_OPP
EXPRESI -> ANGKA OPP_LGC VARIABLE EXPRESI_OPP
EXPRESI -> VARIABLE EXPRESI_OPP OPP_LGC ANGKA
EXPRESI -> ANGKA EXPRESI_OPP OPP_LGC VARIABLE
EXPRESI_OPP -> OPP_ART VARIABLE
EXPRESI_OPP -> OPP_ART ANGKA
EXPRESI_OPP -> EXPRESI_OPP EXPRESI_OPP
ANGKA -> FLOAT
ANGKA -> INTEGER
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET ELSE_STATE
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET ELSE_STATE
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET ELSE_STATE
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET ELSE_STATE
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET ELSE_STATE
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET ELSE_STATE
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET ELSE_STATE
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET ELSE_STATE
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET ELSE_STATE
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
ELSE_IF_STATE -> ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
ELSE_IF_STATE -> ENTER ELSE IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
ELSE_IF_BANYAK -> ELSE_IF_STATE
ELSE_IF_BANYAK -> ELSE_IF_STATE ELSE_IF_BANYAK
ELSE_STATE -> ELSE OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET
ELSE_STATE -> ELSE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
ELSE_STATE -> ELSE OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET
ELSE_STATE -> ENTER ELSE OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET
ELSE_STATE -> ENTER ELSE OPEN_CURLY_BRACKET ENTER CLOSE_CURLY_BRACKET
ELSE_STATE -> ENTER ELSE OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
LOOP_IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET
LOOP_IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET ELSE_STATE
LOOP_IF_STATE -> IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
LOOP_ELSE_IF_STATE -> ELSE_IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET
LOOP_ELSE_IF_STATE -> ELSE_IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET ELSE_STATE
LOOP_ELSE_IF_STATE -> ELSE_IF OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET ELSE_IF_BANYAK
LOOP_ELSE_IF_BANYAK -> ELSE_IF_STATE
LOOP_ELSE_IF_BANYAK -> ELSE_IF_STATE ELSE_IF_BANYAK
LOOP_ELSE_STATE -> OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET
LOOP_SENTENCE -> ENTER
LOOP_SENTENCE -> SENTENCE
LOOP_SENTENCE -> LOOP_SENTENCE ENTER
LOOP_SENTENCE -> ENTER LOOP_SENTENCE
LOOP_SENTENCE -> LOOP_SENTENCE LOOP_SENTENCE
LOOP_SENTENCE -> BREAK SEMICOLON ENTER
LOOP_SENTENCE -> CONTINUE SEMICOLON ENTER
LOOP_SENTENCE -> BREAK SEMICOLON
LOOP_SENTENCE -> CONTINUE SEMICOLON
LOOP_SENTENCE -> LOOP_IF_STATE
PARAMETER -> VARIABLE OPP_LGC TYPE
WHILE_STATE -> WHILE OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
WHILE_STATE -> WHILE OPEN_ROUND_BRACKET PARAMETER CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
WHILE_STATE -> WHILE OPEN_ROUND_BRACKET EXPRESI CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET
WHILE_STATE -> WHILE OPEN_ROUND_BRACKET PARAMETER CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET
INCREMENT -> PLUS PLUS
DECREMENT -> MINUS MINUS
INC_DCR -> VARIABLE DECREMENT
INC_DCR -> VARIABLE INCREMENT
FOR_CONDITION -> EXPRESI
FOR_CONDITION -> VAR VARIABLE EQUAL TYPE SEMICOLON PARAMETER SEMICOLON INC_DCR
FOR_CONDITION -> LET VARIABLE EQUAL TYPE SEMICOLON PARAMETER SEMICOLON INC_DCR
FOR_CONDITION -> EXPRESI
FOR_CONDITION -> VAR VARIABLE EQUAL TYPE SEMICOLON PARAMETER SEMICOLON INC_DCR
FOR_CONDITION -> LET VARIABLE EQUAL TYPE SEMICOLON PARAMETER SEMICOLON INC_DCR
FOR_CONDITION -> SEMICOLON PARAMETER SEMICOLON
FOR_CONDITION -> ASSIGNER VARIABLE IN VARIABLE
FOR_CONDITION -> VARIABLE IN VARIABLE
FOR_CONDITION -> ASSIGNER VARIABLE OF VARIABLE
FOR_CONDITION -> VARIABLE OF VARIABLE
FOR_STATE -> FOR OPEN_ROUND_BRACKET FOR_CONDITION CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET LOOP_SENTENCE CLOSE_CURLY_BRACKET
FOR_STATE -> FOR OPEN_ROUND_BRACKET FOR_CONDITION CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET ENTER LOOP_SENTENCE ENTER CLOSE_CURLY_BRACKET
CASE_PARAM -> BREAK SEMICOLON
CASE_PARAM -> SENTENCE
CASE_PARAM -> CASE_PARAM ENTER
CASE_PARAM -> ENTER CASE_PARAM
CASE_PARAM -> CASE_PARAM CASE_PARAM
SWITCH_INPUT -> VARIABLE
SWITCH_INPUT -> TYPE
SWITCH_INPUT -> PARAMETER
SWITCH_PARAM -> ENTER
SWITCH_PARAM -> SWITCH_PARAM ENTER
SWITCH_PARAM -> ENTER SWITCH_PARAM
SWITCH_PARAM -> DEFAULT COLON CASE_PARAM
SWITCH_PARAM -> DEFAULT COLON CASE_PARAM SWITCH_PARAM
SWITCH_PARAM -> CASE TYPE COLON CASE_PARAM
SWITCH_PARAM -> CASE TYPE COLON CASE_PARAM SWITCH_PARAM
SWITCH_PARAM -> CASE OPEN_ROUND_BRACKET TYPE CLOSE_ROUND_BRACKET COLON SENTENCE
SWITCH_PARAM -> CASE OPEN_ROUND_BRACKET TYPE CLOSE_ROUND_BRACKET COLON SENTENCE SWITCH_PARAM
SWITCH_STATE -> SWITCH OPEN_ROUND_BRACKET SWITCH_INPUT CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET CLOSE_CURLY_BRACKET
SWITCH_STATE -> SWITCH OPEN_ROUND_BRACKET SWITCH_INPUT CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SWITCH_PARAM CLOSE_CURLY_BRACKET
TRY_STATE -> TRY OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET CATCH_STATE
TRY_STATE -> TRY OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET CATCH_STATE FINALLY_STATE
TRY_STATE -> TRY OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET FINALLY_STATE
CATCH_STATE -> CATCH OPEN_ROUND_BRACKET VARIABLE CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET SENTENCE CLOSE_CURLY_BRACKET
FUNCTION_PARAM -> VARIABLE
FUNCTION_PARAM -> VARIABLE COMMA FUNCTION_PARAM
FUNCTION_PARAM -> FUNCTION_PARAM COMMA FUNCTION_PARAM
FUNCTION_STATE -> FUNCTION VARIABLE OPEN_ROUND_BRACKET FUNCTION_PARAM CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET FUNC_SENTENCE CLOSE_CURLY_BRACKET
FUNCTION_STATE -> FUNCTION VARIABLE OPEN_ROUND_BRACKET CLOSE_ROUND_BRACKET OPEN_CURLY_BRACKET FUNC_SENTENCE CLOSE_CURLY_BRACKET
FUNC_SENTENCE -> RET_SENTENCE
FUNC_SENTENCE -> RETURN EXPRESI
FUNC_SENTENCE -> SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE RET_SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE RETURN EXPRESI
FUNC_SENTENCE -> SENTENCE FUNC_SENTENCE
FUNC_SENTENCE -> ENTER FUNC_SENTENCE
FUNC_SENTENCE -> FUNC_SENTENCE ENTER
RET_SENTENCE -> ENTER
RET_SENTENCE -> RETURN VARIABLE SEMICOLON
RET_SENTENCE -> RETURN TYPE SEMICOLON
RET_SENTENCE -> RETURN TYPE SEMICOLON
RET_SENTENCE -> RET_SENTENCE ENTER
THROW_VAR -> VARIABLE EQUAL THROW_TYPE
THROW_TYPE -> INTEGER
THROW_TYPE -> STRING
THROW_TYPE -> BOOLEAN
THROW_TYPE -> FLOAT
THROW_TYPE -> DOUBLE
THROW_TYPE -> LONG
THROW_TYPE -> CHAR
THROW_STATE -> THROW THROW_TYPE SEMICOLON
THROW_STATE -> THROW THROW_VAR SEMICOLON
DICTPARAM -> ENTER
DICTPARAM -> DICTPARAM ENTER
DICTPARAM -> VARIABLE COLON TYPE
DICTPARAM -> DICTPARAM COMMA DICTPARAM
DICTPARAM -> DICTPARAM COMMA ENTER DICTPARAM
DICTPARAM -> DICTPARAM DICTPARAM
DICT_ASSIGN -> ASSIGNER VARIABLE EQUAL OPEN_CURLY_BRACKET DICTPARAM CLOSE_CURLY_BRACKET SEMICOLON
DICT_TYPE -> DICT_ASSIGN
DICT -> DICT_TYPE
DELETE_STATE -> DELETE VARIABLE DOT VARIABLE SEMICOLON